-- Employees
INSERT INTO [Employee]		(firstName,	 lastName,	 jobTitle,	 systemAccessLevel)
VALUES						('John',     'Bones',    'Tjener',   0); -- id 1
INSERT INTO [Employee]		(firstName,	 lastName,	 jobTitle,	 systemAccessLevel)
VALUES						('Daniel',   'McRibs',   'Tjener',   0); -- id 2
INSERT INTO [Employee]		(firstName,	 lastName,	 jobTitle,	 systemAccessLevel)
VALUES						('furstnaem','laztnaim', 'Kok',		 1); -- id 3
INSERT INTO [Employee]		(firstName,	 lastName,	 jobTitle,	 systemAccessLevel)
VALUES						('Anders',   'Olesen',   'Manager',  2); -- id 4

-- Restaurants
INSERT INTO [Restaurant]	(restaurantCode, [name],city,  streetName	   )
VALUES                      ('001', 'Strandbones', 'Aalborg', 'Strandvejen'); 
INSERT INTO [Restaurant]	(restaurantCode, [name],city,  streetName	   )
VALUES                      ('002', 'Elvisbones', 'Randers', 'Juventusvej' ); 
INSERT INTO [Restaurant]	(restaurantCode, [name],city,  streetName	   )
VALUES                      ('003', 'Snebones',   'Nuuk',    'Imaneq'      ); 

-- Object_Tables
INSERT INTO [Object_Table]  (restaurantCode, tableNumber)
VALUES                      ('001',		    '0001'),
							('001',		    '0002'),
							('001',		    '0003'),
							('002',		    '0001'),
							('002',		    '0002'),
							('002',		    '0003'),
							('003',		    '0001'),
							('003',		    '0002'),
							('003',		    '0003'); 

-- Incomplete TableOrders
INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0001' ,		  '001'); -- Creates fresh TableOrder
                    --SCOPE_IDENTITY() is a method that returns the last autogenerated identity in this transaction
UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0001' AND restaurantCode = '001';  -- Assigns chosen table with the TableOrder

INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0002',		  '001'); 

UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0002' AND restaurantCode = '001'; 

INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0003',		  '001'); 

UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0003' AND restaurantCode = '001'; 

INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0001',		  '002'); 

UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0001' AND restaurantCode = '002'; 

INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0002',		  '002'); 

UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0002' AND restaurantCode = '002'; 

INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0003',		  '002'); 

UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0003' AND restaurantCode = '002'; 

INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0001',		  '003'); 

UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0001' AND restaurantCode = '003'; 

INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0002',		  '003'); 

UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0002' AND restaurantCode = '003'; 

INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('1800-01-01',  0,                 '',          -1,
0,               0,               0,                   0,                    '0003',		  '003'); 

UPDATE [Object_Table] SET tableOrderId=SCOPE_IDENTITY() WHERE tableNumber = '0003' AND restaurantCode = '003';


-- Menu Items
--   Potato Dishes
INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                  ('Pommes Frites', 'Pom', 30, 'PotatoDish', 1);
DECLARE @Fries INT = SCOPE_IDENTITY(); -- Added MenuItems have their menuItemId saved as a local variable to make further calls easier
INSERT INTO [PotatoDish](menuItemId, isPremium, fixedPrice)
VALUES                  (@Fries, 0, 0); -- @Fries is the INT that was previously saved from SCOPE_IDENTITY()

INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                  ('Special Fries', 'Ekstra specielle pommes', 69, 'PotatoDish', 1);
DECLARE @SpecialFries INT = SCOPE_IDENTITY();
INSERT INTO [PotatoDish](menuItemId, isPremium, fixedPrice)
VALUES                  (@SpecialFries, 1, 0);

--   SelfServiceBars
INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Softice', 'Husets hindbær softice', 0, 'SelfServiceBar', 0);
DECLARE @Softice INT = SCOPE_IDENTITY();
INSERT INTO [SelfServiceBar] (menuItemId, barType, eveningPrice, lunchPrice)
VALUES                       (@Softice,   1,       55,           49);

INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Saladbar', 'Tag-Selv salad bar', 0, 'SelfServiceBar', 0);
DECLARE @Saladbar INT = SCOPE_IDENTITY();
INSERT INTO [SelfServiceBar] (menuItemId, barType, eveningPrice, lunchPrice)
VALUES                       (@Saladbar,   0,       55,           49);

--   Drinks
INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Tag-Selv Sodavand', '', 0, 'Drink', 0);
DECLARE @Softdrink INT = SCOPE_IDENTITY();
INSERT INTO [Drink]    (menuItemId, isAlcoholic, price, isRefill)
VALUES                 (@Softdrink, 0,           69,    1);

INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Flaske Hvidvin', 'Californsk chardonay', 0, 'Drink', 1);
DECLARE @Chardonay INT = SCOPE_IDENTITY();
INSERT INTO [Drink]    (menuItemId, isAlcoholic, price, isRefill)
VALUES                 (@Chardonay, 1,           269,    0);

--   SideDishes
INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Chilli Cheese Tops', '', 2,            'SideDish', 1);
DECLARE @ChilliCheeseTops INT = SCOPE_IDENTITY();
INSERT INTO [SideDish] (menuItemId, quantityPerServing, fixedPrice)
VALUES                 (@ChilliCheeseTops, 5, 35);

INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Chicken Tendies', 'Crispy', 2,         'SideDish', 1);
DECLARE @ChickenTendie INT = SCOPE_IDENTITY();
INSERT INTO [SideDish] (menuItemId, quantityPerServing, fixedPrice)
VALUES                 (@ChickenTendie, 2, 35);

--   DipsAndSauces
INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Whiskey Sauce', '', 30,				'DipsAndSauces', 1);
DECLARE @WhiskeySauce INT = SCOPE_IDENTITY();
INSERT INTO [DipsAndSauces] (menuItemId, isSauce, fixedPrice)
VALUES						(@WhiskeySauce, 1,    20);

INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Aioli', '', 0,				'DipsAndSauces', 1);
DECLARE @Aioli INT = SCOPE_IDENTITY();
INSERT INTO [DipsAndSauces] (menuItemId, isSauce, fixedPrice)
VALUES						(@Aioli, 0,    15);

--   MainCourses
INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Spareribs', 'Bone’s Original Spareribs – gæsternes absolutte favorit.', 900, 'MainCourse', 1);
DECLARE @Spareribs INT = SCOPE_IDENTITY();
INSERT INTO [MainCourse] (menuItemId, introductionDescription, eveningPrice, lunchPrice)
VALUES					 (@Spareribs, 'Tilpas dine ribs.',     189,          129);
INSERT INTO [MultipleChoiceMenu] (selectionDescription, mainCourseId)
VALUES							 ('Størrelse',          @Spareribs  )
DECLARE @Spareribs_Size INT = SCOPE_IDENTITY();
INSERT INTO [SelectionOption] ([description], additionalPrice, kitchenNotes , choiceMenuId)
VALUES                        ('Small(300g)', 0,               '300g',     @Spareribs_Size),
							  ('Medium(450g)',0,               '450g',     @Spareribs_Size),
							  ('Large(650g)', 0,               '650g',     @Spareribs_Size);

INSERT INTO [MenuItem] ([name], [description], preparationTime, itemType, isMadeByKitchenStaff)
VALUES                 ('Big Boy Burger', 'En ægte legende på Bone’s! Hakkebøf, ‘Apple Smoked Bacon’, salat, tomat, løg, pickles, ketchup, mayo og cheddarost',
						600, 'MainCourse', 1);
DECLARE @BigBoyBurger INT = SCOPE_IDENTITY();
INSERT INTO [MainCourse] (menuItemId, introductionDescription, eveningPrice, lunchPrice)
VALUES					 (@BigBoyBurger, 'Tilpas din burger.',     169,          129);
INSERT INTO [MultipleChoiceMenu] (selectionDescription, mainCourseId)
VALUES							 ('Burger Type',       @BigBoyBurger);
DECLARE @BigBoyBurger_Paddy INT = SCOPE_IDENTITY();
INSERT INTO [SelectionOption] ([description], additionalPrice, kitchenNotes ,   choiceMenuId)
VALUES                        ('Hakkebøf',      0,             'Beef',   @BigBoyBurger_Paddy),
							  ('Chicken Tender',0,             'CTender',@BigBoyBurger_Paddy),
							  ('Vegetar',       0,             'Veggie', @BigBoyBurger_Paddy);

INSERT INTO [AddOnOption]     ([description], additionalPrice, kitchenNotes ,   mainCourseId)
VALUES                        ('Ekstra Bøf',  29,              'double',       @BigBoyBurger);

--   MenuCards
INSERT INTO [MenuCard] ([name],  restaurantCode)
VALUES				   ('Voksen frokost', '001');
DECLARE @Strandvejen_AdultLunchMenu INT = SCOPE_IDENTITY();
INSERT INTO [AvailabilityTracker] (menuItemId, menuCardId, isAvailable) -- Adds all the following availability trackers.
VALUES							  (@Fries, @Strandvejen_AdultLunchMenu, 1),
								  (@SpecialFries, @Strandvejen_AdultLunchMenu, 1),
								  (@Softice, @Strandvejen_AdultLunchMenu, 1),
								  (@Saladbar, @Strandvejen_AdultLunchMenu, 1),
								  (@Softdrink, @Strandvejen_AdultLunchMenu, 1),
								  (@Chardonay, @Strandvejen_AdultLunchMenu, 1),
								  (@ChilliCheeseTops, @Strandvejen_AdultLunchMenu, 1),
								  (@ChickenTendie, @Strandvejen_AdultLunchMenu, 1),
								  (@WhiskeySauce, @Strandvejen_AdultLunchMenu, 1),
								  (@Aioli, @Strandvejen_AdultLunchMenu, 1),
								  (@Spareribs, @Strandvejen_AdultLunchMenu, 1),
								  (@BigBoyBurger, @Strandvejen_AdultLunchMenu, 1);

INSERT INTO [MenuCard] ([name],  restaurantCode)
VALUES				   ('Voksen frokost', '002');
DECLARE @Elvis_AdultLunchMenu INT = SCOPE_IDENTITY();
INSERT INTO [AvailabilityTracker] (menuItemId, menuCardId, isAvailable) -- Adds all the following availability trackers.
VALUES							  (@Fries, @Elvis_AdultLunchMenu, 1),
								  (@SpecialFries, @Elvis_AdultLunchMenu, 1),
								  (@Softice, @Elvis_AdultLunchMenu, 0), -- Softice machine is broken :C
								  (@Saladbar, @Elvis_AdultLunchMenu, 1),
								  (@Softdrink, @Elvis_AdultLunchMenu, 1),
								  (@Chardonay, @Elvis_AdultLunchMenu, 1),
								  (@ChilliCheeseTops, @Elvis_AdultLunchMenu, 1),
								  (@ChickenTendie, @Elvis_AdultLunchMenu, 1),
								  (@WhiskeySauce, @Elvis_AdultLunchMenu, 1),
								  (@Aioli, @Elvis_AdultLunchMenu, 1),
								  (@Spareribs, @Elvis_AdultLunchMenu, 1),
								  (@BigBoyBurger, @Elvis_AdultLunchMenu, 0);

--   Historic TableOrderData
INSERT INTO [TableOrder]	(timeOfArrival, isTableOrderClosed, paymentType, totalTableOrderPrice, 
totalAmountPaid, isSentToKitchen, isRequestingService, orderPreparationTime, tableNumber, tableRestaurantCode)
VALUES                      ('2025-01-01 017:45:33',  1,                 '',          574,
574,               1,               0,                   1200,                    '0001',	'001');
DECLARE @TableOrderOne INT = SCOPE_IDENTITY();
INSERT INTO [PersonalOrder] (customerAge, customerName, tableOrderId)
VALUES                      (28,          'Andreas',    @TableOrderOne);
DECLARE @TOOnePersonalOrderOne INT = SCOPE_IDENTITY();
INSERT INTO [PersonalOrderLine] (additionalPrice, notes, [status], personalOrderId, menuItemId)
VALUES (49, '450g', 3, @TOOnePersonalOrderOne, @Spareribs),
	   (0, '', 3, @TOOnePersonalOrderOne, @SpecialFries),
	   (0,'', 3, @TOOnePersonalOrderOne, @SoftDrink);

INSERT INTO [PersonalOrder] (customerAge, customerName, tableOrderId)
VALUES                      (22,          'Annie',    @TableOrderOne);

DECLARE @TOOnePersonalOrderTwo INT = SCOPE_IDENTITY();

INSERT INTO [PersonalOrderLine] (additionalPrice, notes, [status], personalOrderId, menuItemId)
VALUES (29, 'double veggie', 3, @TOOnePersonalOrderTwo, @BigBoyBurger),
	   (0, '', 3, @TOOnePersonalOrderTwo, @Fries),
	   (0,'', 3, @TOOnePersonalOrderTwo, @SoftDrink);